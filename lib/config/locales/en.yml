en:
  cli:
    # lib/dsu/cli.rb
    commands:
      add:
        desc: add|-a [OPTIONS] DESCRIPTION
        usage: Adds a DSU entry having DESCRIPTION to the date associated with the given OPTION
        long_desc: |
          Will add a DSU entry having DESCRIPTION to the date associated with the given OPTION.

          $ dsu add [-d DATE|-n|-t|-y] DESCRIPTION

          $ dsu -a [-d DATE|-n|-t|-y] DESCRIPTION

          OPTIONS:

          -d DATE: Adds a DSU entry having DESCRIPTION to the DATE.

          %{date_option_description}

          -n: Adds a DSU entry having DESCRIPTION to today's date (`Time.now`).

          -t: Adds a DSU entry having DESCRIPTION to tomorrow's date (`Time.new.tomorrow`).

          -y: Adds a DSU entry having DESCRIPTION to yesterday's date (`Time.new.yesterday`).

          DESCRIPTION

          Must be be between 2 and 256 characters (inclusive) in length.
      config:
        desc: config|-c SUBCOMMAND
        usage: Manage configuration file for this gem
      edit:
        desc: edit|-e SUBCOMMAND
        usage: Edit DSU entries for the given SUBCOMMAND
      info:
        desc: info|-i
        usage: Displays information about this DSU release
        info: |
          Dsu Info
          --------------------------------------------------
                       Dsu version: %{dsu_version}
             Configuration version: %{configuration_version}
               Entry group version: %{entry_group_version}
               Color theme version: %{color_theme_version}

                     Config folder: %{config_folder}
                       Root folder: %{root_folder}
                    Entries folder: %{entries_folder}
                     Themes folder: %{themes_folder}
                        Gem folder: %{gem_folder}
                       Temp folder: %{temp_folder}

          Migration version folder: %{migration_version_folder}
             Migration file folder: %{migration_file_folder}
      list:
        desc: list|-l SUBCOMMAND
        usage: Displays DSU entries for the given SUBCOMMAND
      theme:
        desc: theme|-t SUBCOMMAND
        usage: Manage DSU themes
      version:
        desc: version|-v
        usage: Displays the DSU version for this gem
    # lib/dsu/subcommands
    subcommands:
      config:
        delete:
          desc: delete
          usage: Deletes the configuration file
          long_desc: |
            Deletes the configuration file.

            EXAMPLES:

            dsu config delete

            NOTES

            Deleting the dsu configuration file will simply cause dsu to use the default configuration options (`Dsu::Models::Configuration::DEFAULT_CONFIGURATION`).
        info:
          desc: info
          usage: Displays information about this gem configuration
          long_desc: |
            Displays information about this gem configuration.

            EXAMPLES:

            $ dsu config info
        init:
          desc: init
          usage: Creates and initializes a .dsu file in your home folder
          long_desc: |
            Creates and initializes a .dsu file in your home folder (%{home_folder}) that may be edited.

            EXAMPLES:

            $ dsu config init

            CONFIGURATION FILE ENTRIES

            The following configuration file options are available:

            version:

            The configuration version - DO NOT ALTER THIS VALUE!

            editor:

            The default editor to use when editing entry groups if the EDITOR environment variable on your system is not set. The default is 'nano'. You'll need to change the default editor on Windows systems.

            Default: "nano" on nix sytems.

            entries_display_order:

            The order by which entries will be displayed, "asc" or "desc" (ascending or descending, respectively).

            Default: "desc"

            carry_over_entries_to_today:

            Applicable to the `dsu edit` command. Valid values are true|false. If true, when editing DSU entries for the first time on any given day (e.g. `dsu edit today`), DSU entries from the previous day will be copied into the current editing session. If there are no DSU entries from the previous day, dsu will search backwards up to 7 days to find a DSU date that has entries to copy. If after searching back 7 days, no DSU entries are found, the editor session will simply provide no previous DSU entries.

            Default: false

            include_all:

            Applicable to dsu commands that display DSU date lists (e.g. `dsu list` commands). Valid values are true|false. If true, all DSU dates within the specified range will be displayed, regardless of whether or not a particular date has entries. If false, only DSU dates between the first and last DSU dates that have entries will be displayed.

            Default: false

            theme_name:

            Default: "default"
      edit:
        date:
          desc: date|d DATE
          usage: Edits the DSU entries for DATE
          long_desc: |
            Edits the DSU entries for DATE.

            %{date_option_description}
        today:
          desc: today|n
          usage: Edits the DSU entries for today
          long_desc: |
            Edits the DSU entries for today.
        tomorrow:
          desc: tomorrow|t
          usage: Edits the DSU entries for tomorrow
          long_desc: |
            Edits the DSU entries for tomorrow.
        yesterday:
          desc: yesterday|y
          usage: Edits the DSU entries for yesterday
          long_desc: |
            Edits the DSU entries for yesterday.
      list:
        date:
          desc: date|d DATE|MNEUMONIC
          usage: Displays the DSU entries for the given DATE or MNEUMONIC
          long_desc: |
            Displays the DSU entries for the given DATE or MNEUMONIC.

            %{date_option_description}

            %{mneumonic_option_description}
        dates:
          desc: dates|dd OPTIONS
          usage: Displays the DSU entries for the OPTIONS provided
          long_desc: |
            Displays the DSU entries for the given OPTIONS.

            $ dsu dates OPTIONS

            $ dsu dd OPTIONS

            OPTIONS:

            -a|--include-all true|false: If true, all DSU dates within the specified range will be displayed. If false, DSU dates between the first and last DSU dates that have NO entries will NOT be displayed.. The default is taken from the dsu configuration setting :include_all, see `dsu config info`.

            -f|--from DATE|MNEMONIC: The DATE or MNEUMONIC that represents the start of the range of DSU dates to display. If a relative mneumonic is used (+/-n, e.g +1, -1, etc.), the date calculated will be relative to the current date (e.g. `<MNEUMONIC>.to_i.days.from_now(Time.now)`).

            -t|--to DATE|MNEMONIC: The DATE or MNEUMONIC that represents the end of the range of DSU dates to display. If a relative mneumonic is used (+/-n, e.g +1, -1, etc.), the date calculated will be relative to the date that resulting from the `--from` option date calculation.

            %{date_option_description}

            %{mneumonic_option_description}

            EXAMPLES:

            NOTE: All example results are subject to the `--include-all|-a` option.

            NOTE: All examples can substitute their respective short form options (e.g. `-f`, `-t`, etc. for `--from`, `--to`, etc.).

            The below will display the DSU entries for the range of dates from 1/1 to 1/4 for the current year:

            $ dsu list dates --from 1/1 --to +3

            This will display the DSU entries for the range of dates from 1/2 to 1/5 for the year 2022:

            $ dsu list dates --from 1/5/2022 --to -3

            This (assuming "today" is 1/10) will display the DSU entries for the last week 1/10 to 1/3 of the current year:

            $ dsu list dates --from today --to -7

            This (assuming "today" is 5/23) will display the DSU entries for the last week 5/16 to 5/22.
            This example simply illustrates the fact that you can use relative mneumonics for
            both `--from` and `--to` options; this doesn't mean you should do so...

            While you can use relative mneumonics for both `--from` and `--to` options,
            there is always a more intuitive way. The below example basically lists one week
            of DSU entries back 1 week from yesterday's date:

            $ dsu list dates --from -7 --to +6

            The above can be accomplished MUCH easier by simply using the `yesterday` mneumonic...

            This (assuming "today" is 5/23) will display the DSU entries back 1 week from yesterday's date 5/16 to 5/22:

            $ dsu list dates --from yesterday --to -6
        today:
          desc: today|n
          usage: Displays the DSU entries for today
          long_desc: |
            Displays the DSU entries for today.

            $ dsu list today

            $ dsu list n
        tomorrow:
          desc: tomorrow|t
          usage: Displays the DSU entries for tomorrow
          long_desc: |
            Displays the DSU entries for tomorrow.

            $ dsu list tomorrow

            $ dsu list t
        yesterday:
          desc: yesterday|y
          usage: Displays the DSU entries for yesterday
          long_desc: |
            Displays the DSU entries for yesterday.

            $ dsu list yesterday

            $ dsu list y
    options:
      include_all: Include dates that have no DSU entries
  errors:
    error: "Error: %{message}"
    migration:
      error: "Error running migrations: %{message}"
  headers:
    entry:
      could_not_be_added: 'An error was encountered; the entry could not be added:'
  messages:
    configuration_file:
      already_exists: Configuration file (%{configuration_file}) already exists.
      created: Configuration file (%{configuration_file}) created.
      deleted: Configuration file (%{configuration_file}) deleted.
      destination_folder_does_not_exist: Destination folder for configuration file (%{configuration_folder}) does not exist.
      does_not_exist: Configuration file (%{configuration_file}) does not exist.
